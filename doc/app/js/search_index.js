var search_data = {"index":{"searchIndex":["admincontroller","adminhelper","answer","answerscrubber","answerscontroller","redcarpet","render","answershelper","applicationcontroller","applicationhelper","comment","commentscrubber","commentscontroller","redcarpet","render","commentshelper","errorscontroller","errorshelper","flag","flagstatus","flagscontroller","flagshelper","moderatorcontroller","moderatorhelper","notification","notificationscontroller","notificationshelper","privilege","question","questionscrubber","questionscontroller","redcarpet","render","questionshelper","sitesetting","sitesettingscrubber","sitesettingscontroller","sitesettingshelper","user","users","registrationscontroller","sessionscontroller","userscontroller","usershelper","vote","votescontroller","voteshelper","check_your_post_privilege()","check_your_privilege()","check_your_privilege()","configure_permitted_parameters()","conflict()","create()","create()","create()","create()","create()","create_notification()","destroy()","destroy()","destroy()","destroy()","edit()","edit()","edit()","forbidden()","get_setting()","get_setting()","has_post_privilege?()","has_privilege?()","index()","index()","index()","index()","index()","index()","internal_server_error()","my_vote()","my_vote()","new()","new()","new()","new()","new()","new()","new()","not_found()","queue()","read()","read_all()","recently_deleted_answers()","recently_deleted_questions()","recently_undeleted_answers()","recently_undeleted_questions()","renderer()","renderer()","renderer()","resolve()","show()","show()","skip_node?()","skip_node?()","skip_node?()","skip_node?()","tagged()","undelete()","undelete()","undelete()","unprocessable_entity()","unread_notifications()","update()","update()","update()","update()","user_is_admin()","user_is_mod()","verify_admin()","verify_moderator()","readme"],"longSearchIndex":["admincontroller","adminhelper","answer","answerscrubber","answerscontroller","answerscontroller::redcarpet","answerscontroller::redcarpet::render","answershelper","applicationcontroller","applicationhelper","comment","commentscrubber","commentscontroller","commentscontroller::redcarpet","commentscontroller::redcarpet::render","commentshelper","errorscontroller","errorshelper","flag","flagstatus","flagscontroller","flagshelper","moderatorcontroller","moderatorhelper","notification","notificationscontroller","notificationshelper","privilege","question","questionscrubber","questionscontroller","questionscontroller::redcarpet","questionscontroller::redcarpet::render","questionshelper","sitesetting","sitesettingscrubber","sitesettingscontroller","sitesettingshelper","user","users","users::registrationscontroller","users::sessionscontroller","userscontroller","usershelper","vote","votescontroller","voteshelper","applicationhelper#check_your_post_privilege()","applicationcontroller#check_your_privilege()","applicationhelper#check_your_privilege()","applicationcontroller#configure_permitted_parameters()","errorscontroller#conflict()","answerscontroller#create()","commentscontroller#create()","questionscontroller#create()","users::registrationscontroller#create()","votescontroller#create()","user#create_notification()","answerscontroller#destroy()","commentscontroller#destroy()","questionscontroller#destroy()","votescontroller#destroy()","answerscontroller#edit()","questionscontroller#edit()","sitesettingscontroller#edit()","errorscontroller#forbidden()","applicationcontroller#get_setting()","applicationhelper#get_setting()","user#has_post_privilege?()","user#has_privilege?()","admincontroller#index()","moderatorcontroller#index()","notificationscontroller#index()","questionscontroller#index()","sitesettingscontroller#index()","userscontroller#index()","errorscontroller#internal_server_error()","answershelper#my_vote()","questionshelper#my_vote()","answerscrubber::new()","answerscontroller#new()","commentscrubber::new()","flagscontroller#new()","questionscrubber::new()","questionscontroller#new()","sitesettingscrubber::new()","errorscontroller#not_found()","flagscontroller#queue()","notificationscontroller#read()","notificationscontroller#read_all()","moderatorcontroller#recently_deleted_answers()","moderatorcontroller#recently_deleted_questions()","moderatorcontroller#recently_undeleted_answers()","moderatorcontroller#recently_undeleted_questions()","answerscontroller::renderer()","commentscontroller::renderer()","questionscontroller::renderer()","flagscontroller#resolve()","questionscontroller#show()","userscontroller#show()","answerscrubber#skip_node?()","commentscrubber#skip_node?()","questionscrubber#skip_node?()","sitesettingscrubber#skip_node?()","questionscontroller#tagged()","answerscontroller#undelete()","commentscontroller#undelete()","questionscontroller#undelete()","errorscontroller#unprocessable_entity()","user#unread_notifications()","answerscontroller#update()","commentscontroller#update()","questionscontroller#update()","sitesettingscontroller#update()","applicationhelper#user_is_admin()","applicationhelper#user_is_mod()","applicationcontroller#verify_admin()","applicationcontroller#verify_moderator()",""],"info":[["AdminController","","AdminController.html","","<p>Web controller. Provides authenticated actions for use by administrators.\n"],["AdminHelper","","AdminHelper.html","","<p>Provides helper methods for use by views under\n<code>AdminController</code>.\n"],["Answer","","Answer.html","","<p>Represents one answer. Answers are attached to both a question and a user\naccount; have a score, and …\n"],["AnswerScrubber","","AnswerScrubber.html","","<p>Provides a custom HTML sanitization interface to use for cleaning up the\nHTML in answers.\n"],["AnswersController","","AnswersController.html","","<p>Web controller. Provides actions that relate to answers. Pretty much the\nstandard set of resources, really …\n"],["AnswersController::Redcarpet","","AnswersController/Redcarpet.html","",""],["AnswersController::Redcarpet::Render","","AnswersController/Redcarpet/Render.html","",""],["AnswersHelper","","AnswersHelper.html","","<p>Provides helper methods for use by views under\n<code>AnswersController</code>.\n"],["ApplicationController","","ApplicationController.html","","<p>Application controller. This is the overarching control center for the\napplication, which every web controller …\n"],["ApplicationHelper","","ApplicationHelper.html","","<p>Provides helper methods for use by views under\n<code>ApplicationController</code> (and by extension, every view). …\n"],["Comment","","Comment.html","","<p>Represents a comment. Comments are attached to both a post and a user.\n"],["CommentScrubber","","CommentScrubber.html","","<p>Provides a custom HTML sanitization interface to use for cleaning up the\nHTML in questions.\n"],["CommentsController","","CommentsController.html","","<p>Provides mainly web actions for using and making comments.\n"],["CommentsController::Redcarpet","","CommentsController/Redcarpet.html","",""],["CommentsController::Redcarpet::Render","","CommentsController/Redcarpet/Render.html","",""],["CommentsHelper","","CommentsHelper.html","",""],["ErrorsController","","ErrorsController.html","","<p>Provides web actions that represent errors. Rails&#39; standard error pages\nare static HTML with inline …\n"],["ErrorsHelper","","ErrorsHelper.html","",""],["Flag","","Flag.html","","<p>Represents a flag. Flags are attached to both a user and a post, and have a\nsingle status.\n"],["FlagStatus","","FlagStatus.html","","<p>Represents a flag status. Flag statuses are attached to a flag.\n"],["FlagsController","","FlagsController.html","","<p>Provides web and API actions that relate to flagging.\n"],["FlagsHelper","","FlagsHelper.html","",""],["ModeratorController","","ModeratorController.html","","<p>Web controller. Provides authenticated actions for use by moderators. A lot\nof the stuff in here, and …\n"],["ModeratorHelper","","ModeratorHelper.html","","<p>Provides helper methods for use by views under\n<code>ModeratorController</code>.\n"],["Notification","","Notification.html","",""],["NotificationsController","","NotificationsController.html","","<p>Provides web and API actions relating to user notifications.\n"],["NotificationsHelper","","NotificationsHelper.html","",""],["Privilege","","Privilege.html","","<p>Represents a privilege. Privilege assignment is odd (see\n<code>User#has_privilege?</code>) - privileges are assigned …\n"],["Question","","Question.html","","<p>Represents a question. Questions are attached to a user account, and have\nmany answers, a score, and …\n"],["QuestionScrubber","","QuestionScrubber.html","","<p>Provides a custom HTML sanitization interface to use for cleaning up the\nHTML in questions.\n"],["QuestionsController","","QuestionsController.html","","<p>Web controller. Provides actions that relate to questions - this is\nessentially the standard set of resources, …\n"],["QuestionsController::Redcarpet","","QuestionsController/Redcarpet.html","",""],["QuestionsController::Redcarpet::Render","","QuestionsController/Redcarpet/Render.html","",""],["QuestionsHelper","","QuestionsHelper.html","","<p>Provides helper methods for use by views under\n<code>QuestionsController</code>.\n"],["SiteSetting","","SiteSetting.html","","<p>Represents a site setting. Site settings control the operation and display\nof most aspects of the site, …\n"],["SiteSettingScrubber","","SiteSettingScrubber.html","","<p>Provides a custom HTML sanitization interface to use for cleaning up the\nHTML in site settings.\n"],["SiteSettingsController","","SiteSettingsController.html","","<p>Web controller. Provides authenticated actions for use by administrators in\ncontrolling the site settings …\n"],["SiteSettingsHelper","","SiteSettingsHelper.html","","<p>Provides helper methods for use by views under\n<code>SiteSettingsController</code>.\n"],["User","","User.html","","<p>Represents a user. Most of the User&#39;s logic is controlled by Devise and\nits overrides. A user, as …\n"],["Users","","Users.html","",""],["Users::RegistrationsController","","Users/RegistrationsController.html","","<p>An extended version of the Devise registrations controller, which is\noverridden so that we can add additional …\n"],["Users::SessionsController","","Users/SessionsController.html","","<p>An extended version of the Devise sessions controller. Don&#39;t know why I\noverrode this one, I haven&#39;t …\n"],["UsersController","","UsersController.html","","<p>Web controller. Provides actions that relate to users. Does not deal with\naccounts, registrations, sessions …\n"],["UsersHelper","","UsersHelper.html","","<p>Provides helper methods for use by views under\n<code>UsersController</code>.\n"],["Vote","","Vote.html","","<p>Represents a vote. A vote is attached to both a &#39;post&#39; (i.e. a\nquestion or an answer - this is …\n"],["VotesController","","VotesController.html","","<p>Web controller. Provides actions for using voting features - essentially a\nstripped-down and renamed …\n"],["VotesHelper","","VotesHelper.html","","<p>Provides helper methods for use by views under\n<code>VotesController</code>.\n"],["check_your_post_privilege","ApplicationHelper","ApplicationHelper.html#method-i-check_your_post_privilege","(post, privilege)","<p>Basically identical to\n<code>ApplicationController#check_your_post_privilege</code> (sorry, I had\nto call it that), …\n"],["check_your_privilege","ApplicationController","ApplicationController.html#method-i-check_your_privilege","(name, post = nil)",""],["check_your_privilege","ApplicationHelper","ApplicationHelper.html#method-i-check_your_privilege","(privilege)","<p>Basically identical to\n<code>ApplicationController#check_your_privilege</code>, but again as a\nhelper for views.\n"],["configure_permitted_parameters","ApplicationController","ApplicationController.html#method-i-configure_permitted_parameters","()","<p>Re-configures the parameters that the Devise parameter sanitizer will allow\nthrough. By default, this …\n"],["conflict","ErrorsController","ErrorsController.html#method-i-conflict","()","<p>Provides a 409 Conflict error response.\n"],["create","AnswersController","AnswersController.html#method-i-create","()","<p>Authenticated web action. Based on the data submitted from the\n<code>new</code> view, creates a new answer. Assumes …\n"],["create","CommentsController","CommentsController.html#method-i-create","()","<p>Authenticated web action. Creates a comment based on the data passed.\n"],["create","QuestionsController","QuestionsController.html#method-i-create","()","<p>Authenticated web action. Based on data submitted from the <code>new</code>\nview, creates a new question. Explicitly …\n"],["create","Users::RegistrationsController","Users/RegistrationsController.html#method-i-create","()","<p>Extends the Devise default RegistrationsController#create. Additionally\ninitializes a reputation score …\n"],["create","VotesController","VotesController.html#method-i-create","()","<p>Authenticated web action. Casts a vote on behalf of a user. This is just\nabout the most complex action …\n"],["create_notification","User","User.html#method-i-create_notification","(content, link)","<p>Creates and adds a notification to the instance user&#39;s notification\nstack.\n"],["destroy","AnswersController","AnswersController.html#method-i-destroy","()","<p>Authenticated web action. Deletes an answer - that is, applies the\n<code>is_deleted</code> attribute to it.\n"],["destroy","CommentsController","CommentsController.html#method-i-destroy","()","<p>Authenticated web action. Deletes a comment by setting the\n<code>is_deleted</code> field to true.\n"],["destroy","QuestionsController","QuestionsController.html#method-i-destroy","()","<p>Authenticated web action. Marks the question as &#39;deleted&#39; - that\nis, sets the <code>is_deleted</code> field …\n"],["destroy","VotesController","VotesController.html#method-i-destroy","()","<p>Authenticated web action. Removes a vote that has already been cast, and\nhandles re-calculating post …\n"],["edit","AnswersController","AnswersController.html#method-i-edit","()","<p>Authenticated web action. Retrieves a single answer for editing.\n"],["edit","QuestionsController","QuestionsController.html#method-i-edit","()","<p>Authenticated web action. Retrieves a single question for editing.\nPermission to perform this action …\n"],["edit","SiteSettingsController","SiteSettingsController.html#method-i-edit","()","<p>Authenticated administrator web action. Retrieves a single site setting for\nediting.\n"],["forbidden","ErrorsController","ErrorsController.html#method-i-forbidden","()","<p>Provides a 403 Forbidden error response.\n"],["get_setting","ApplicationController","ApplicationController.html#method-i-get_setting","(name)","<p>Retrieves the value of the site setting specified by <code>name</code>.\nThis method is essentially a helper method …\n"],["get_setting","ApplicationHelper","ApplicationHelper.html#method-i-get_setting","(name)","<p>Identical to <code>ApplicationController#get_setting</code>. Retrieves the\nvalue of a site setting based on the name, …\n"],["has_post_privilege?","User","User.html#method-i-has_post_privilege-3F","(name, post)","<p>Basically the same as <code>User#has_privilege?</code>, but checks\nprivileges with relation to the post as well.  …\n"],["has_privilege?","User","User.html#method-i-has_privilege-3F","(name)","<p>Checks whether or not a user has the given privilege. For efficiency,\ninitially checks if the privilege …\n"],["index","AdminController","AdminController.html#method-i-index","()","<p>Administrative web action. No dynamic content - this is purely\nrepresentative of the existence of a (relatively) …\n"],["index","ModeratorController","ModeratorController.html#method-i-index","()","<p>Administrative web action. No dynamic content - this is purely\nrepresentative of the existence of a (relatively) …\n"],["index","NotificationsController","NotificationsController.html#method-i-index","()","<p>Authenticated web/API action. Retrieves a list of active notifications for\nthe current user.\n"],["index","QuestionsController","QuestionsController.html#method-i-index","()","<p>Web action. Retrieves a paginated list of all the questions currently in\nthe database for use by the …\n"],["index","SiteSettingsController","SiteSettingsController.html#method-i-index","()","<p>Authenticated administrator web action. Retrieves a paginated list of all\nsite settings.\n"],["index","UsersController","UsersController.html#method-i-index","()","<p>Web action. Retrieves a paginated list of all users.\n"],["internal_server_error","ErrorsController","ErrorsController.html#method-i-internal_server_error","()","<p>Provides a 500 Internal Server Error error response.\n"],["my_vote","AnswersHelper","AnswersHelper.html#method-i-my_vote","(answer)","<p>Given an answer, returns the vote on it that belongs to the current user,\nor nil if there isn&#39;t one. …\n"],["my_vote","QuestionsHelper","QuestionsHelper.html#method-i-my_vote","(question)","<p>Essentially identical to <code>AnswersHelper#my_vote</code> - returns the\ncurrent user&#39;s vote on the given question, …\n"],["new","AnswerScrubber","AnswerScrubber.html#method-c-new","()","<p>Sets up the scrubber instance with permissible tags and attributes.\n"],["new","AnswersController","AnswersController.html#method-i-new","()","<p>Authenticated web action. Creates a new answer as a resource for form\ncreation in the view.\n"],["new","CommentScrubber","CommentScrubber.html#method-c-new","()","<p>Sets up the scrubber instance with permissible tags and attributes.\n"],["new","FlagsController","FlagsController.html#method-i-new","()","<p>Authenticated API action. Creates a new flag with a reason, assigns it a\npost and a user, and puts it …\n"],["new","QuestionScrubber","QuestionScrubber.html#method-c-new","()","<p>Sets up the scrubber instance with permissible tags and attributes.\n"],["new","QuestionsController","QuestionsController.html#method-i-new","()","<p>Authenticated web action. Creates a new question as a resource for form\ncreation in the view.\n"],["new","SiteSettingScrubber","SiteSettingScrubber.html#method-c-new","()","<p>Sets up the scrubber instance with permissible tags and attributes.\n"],["not_found","ErrorsController","ErrorsController.html#method-i-not_found","()","<p>Provides a 404 Not Found error response.\n"],["queue","FlagsController","FlagsController.html#method-i-queue","()","<p>Administrative web action. Provides a &#39;queue&#39; of flags - i.e. a\npage containing any unresolved …\n"],["read","NotificationsController","NotificationsController.html#method-i-read","()","<p>Authenticated web/API action. Marks a single notification as read.\n"],["read_all","NotificationsController","NotificationsController.html#method-i-read_all","()","<p>Authenticated web/API action. Marks all the current user&#39;s unread\nnotifications as read.\n"],["recently_deleted_answers","ModeratorController","ModeratorController.html#method-i-recently_deleted_answers","()","<p>Administrative web action. Gets a list of recently deleted answers so that\nmoderators can review deletions. …\n"],["recently_deleted_questions","ModeratorController","ModeratorController.html#method-i-recently_deleted_questions","()","<p>Administrative web action. Gets a list of recently deleted questions so\nthat moderators can review deletions. …\n"],["recently_undeleted_answers","ModeratorController","ModeratorController.html#method-i-recently_undeleted_answers","()","<p>Administrative web action. Gets a list of recently undeleted answers so\nthat moderators can review undeletions. …\n"],["recently_undeleted_questions","ModeratorController","ModeratorController.html#method-i-recently_undeleted_questions","()","<p>Administrative web action. Gets a list of recently undeleted questions so\nthat moderators can review …\n"],["renderer","AnswersController","AnswersController.html#method-c-renderer","()","<p>Supplies a pre-constructed Markdown renderer for use in rendering Markdown\nfrom views.\n"],["renderer","CommentsController","CommentsController.html#method-c-renderer","()","<p>Supplies a pre-constructed Markdown renderer for use in rendering Markdown\nfrom views.\n"],["renderer","QuestionsController","QuestionsController.html#method-c-renderer","()","<p>Supplies a pre-constructed Markdown renderer for use in rendering Markdown\nfrom views.\n"],["resolve","FlagsController","FlagsController.html#method-i-resolve","()","<p>Administrative API action. Provides a route for moderators and\nadministrators to resolve flags - that …\n"],["show","QuestionsController","QuestionsController.html#method-i-show","()","<p>Web action. Retrieves a single question, specified by the query string\nparameter <code>id</code>.\n"],["show","UsersController","UsersController.html#method-i-show","()","<p>Web action. Retrieves a single user.\n"],["skip_node?","AnswerScrubber","AnswerScrubber.html#method-i-skip_node-3F","(node)","<p>Defines which nodes should be skipped when sanitizing HTML.\n"],["skip_node?","CommentScrubber","CommentScrubber.html#method-i-skip_node-3F","(node)","<p>Defines which nodes should be skipped when sanitizing HTML.\n"],["skip_node?","QuestionScrubber","QuestionScrubber.html#method-i-skip_node-3F","(node)","<p>Defines which nodes should be skipped when sanitizing HTML.\n"],["skip_node?","SiteSettingScrubber","SiteSettingScrubber.html#method-i-skip_node-3F","(node)","<p>Defines which nodes should be skipped when sanitizing HTML.\n"],["tagged","QuestionsController","QuestionsController.html#method-i-tagged","()","<p>Web action. Retrieves a paginated list of all questions where the tags\ncontain a tag specified in the …\n"],["undelete","AnswersController","AnswersController.html#method-i-undelete","()","<p>Authenticated web action. Removes the <code>is_deleted</code> attribute\nfrom an answer - that is, undeletes it.\n"],["undelete","CommentsController","CommentsController.html#method-i-undelete","()","<p>Authenticated web action. Undeletes a comment by returning the\n<code>is_deleted</code> field to false.\n"],["undelete","QuestionsController","QuestionsController.html#method-i-undelete","()","<p>Authenticated web action. Basically the opposite of <code>:destroy</code> -\nremoves the <code>is_deleted</code> flag from the question, …\n"],["unprocessable_entity","ErrorsController","ErrorsController.html#method-i-unprocessable_entity","()","<p>Provides a 422 Unprocessable Entity error response.\n"],["unread_notifications","User","User.html#method-i-unread_notifications","()","<p>Returns a count of unread notifications for the instance user. Does not\nreturn the notifications themselves; …\n"],["update","AnswersController","AnswersController.html#method-i-update","()","<p>Authenticated web aciton. Based on the information given in\n<code>:edit</code>, updates the answer.\n"],["update","CommentsController","CommentsController.html#method-i-update","()","<p>Authenticated web action. Updates an existing comment with new data, based\non the parameters passed to …\n"],["update","QuestionsController","QuestionsController.html#method-i-update","()","<p>Authenticated web action. Based on the information submitted from the\n<code>edit</code> view, updates the question. …\n"],["update","SiteSettingsController","SiteSettingsController.html#method-i-update","()","<p>Authenticated administrator web action. Applies new values submitted by the\nuser to a single site setting. …\n"],["user_is_admin","ApplicationHelper","ApplicationHelper.html#method-i-user_is_admin","()","<p>Similar to <code>ApplicationController#verify_admin</code>, but doesn&#39;t\nraise errors. Simply returns yea or nay. …\n"],["user_is_mod","ApplicationHelper","ApplicationHelper.html#method-i-user_is_mod","()","<p>Similar to <code>ApplicationController#verify_moderator</code>, but\ndoesn&#39;t raise errors if the user is not a …\n"],["verify_admin","ApplicationController","ApplicationController.html#method-i-verify_admin","()","<p>Very similar to verify_moderator. Verifies that the currently signed in\nuser is an administrator; throws …\n"],["verify_moderator","ApplicationController","ApplicationController.html#method-i-verify_moderator","()","<p>Verifies that the currently signed in user is, in fact, a moderator. This\nmethod assumes that it is used …\n"],["README","","README_rdoc.html","","<p>QPixel\n<p>Rails Q&amp;A software… because I can. This is based on Stack Exchange,\nthough is deliberately …\n"]]}}